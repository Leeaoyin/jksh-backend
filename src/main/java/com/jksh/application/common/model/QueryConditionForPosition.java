package com.jksh.application.common.model;import lombok.*;import java.util.List;@Getterpublic class QueryConditionForPosition {        private List<String> city;        private List<String> functional;        private List<String> industry;    private List<String> experience;        private String tag;        private Integer offset;        private Integer pageSize;        private String key_word;        private QueryConditionForPosition(List<String> city, List<String> functional, List<String> industry, List<String> experience, String tag, Integer offset, Integer pageSize, String key_word){        this.city = city;        this.functional = functional;        this.industry = industry;        this.experience = experience;        this.tag = tag;        this.offset = offset;        this.pageSize = pageSize;        this.key_word = key_word;    }        public static final class QueryConditionBuilder{        private List<String> city;        private List<String> functional;        private List<String> industry;        private List<String> experience;        private String tag;                private Integer offset;        private Integer pageSize;                private String key_word;                private QueryConditionBuilder(){                    }        public static QueryConditionBuilder QueryConditionBuilder() {            return new QueryConditionBuilder();        }        public QueryConditionBuilder withCity(List<String> city) {//            if (StringUtils.isNotEmpty(city)){                this.city = city;//            }else {//                this.city = null;//            }            return this;        }                public QueryConditionBuilder withFunctional(List<String> functional){            this.functional = functional;            return this;        }                public QueryConditionBuilder withIndustry(List<String> industry){            this.industry = industry;            return this;        }                public QueryConditionBuilder withExperience(List<String> experience){            this.experience = experience;            return this;        }                public QueryConditionBuilder withTag(String tag){            this.tag = tag;            return this;        }        public QueryConditionBuilder withPageSize(Integer pageSize){            this.pageSize = pageSize;            return this;        }        public QueryConditionBuilder withOffset(Integer offset){            this.offset = offset;            return this;        }                public QueryConditionBuilder withKeyWord(String key_word){            this.key_word = key_word;            return this;        }                public QueryConditionForPosition build(){            return new QueryConditionForPosition(city, functional, industry, experience, tag, offset, pageSize, key_word);        }                            }        }