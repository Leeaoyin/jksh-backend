package com.jksh.application.common.model;import lombok.Getter;import java.util.List;@Getterpublic class QueryConditionForResume {    private List<String> city;    private List<String> degree;    //    private List<Integer> age;    private List<String> year_of_work;    private String tag;    private Integer offset;    private Integer pageSize;    private String key_word;        private QueryConditionForResume(List<String> city, List<String> degree, List<String> year_of_work,String tag, Integer offset, Integer pageSize, String key_word){        this.city = city;        this.degree = degree;        this.year_of_work = year_of_work;        this.tag = tag;        this.offset = offset;        this.pageSize = pageSize;        this.key_word = key_word;            }    public static final class QueryConditionBuilder{        private List<String> city;        private List<String> degree;//        private List<Integer> age;        private List<String> year_of_work;                private String tag;        private Integer offset;        private Integer pageSize;        private String key_word;        private QueryConditionBuilder(){        }        public static QueryConditionBuilder QueryConditionBuilder() {            return new QueryConditionBuilder();        }        public QueryConditionBuilder withCity(List<String> city) {//            if (StringUtils.isNotEmpty(city)){                this.city = city;//            }else {//                this.city = null;//            }            return this;        }                public QueryConditionBuilder withDegree(List<String> degree){//            if (StringUtils.isNotEmpty(degree)){                this.degree = degree;//            }else{//                this.degree = null;//            }            return this;        }                public QueryConditionBuilder withYearOfWork(List<String> YearOfWork){//            if (StringUtils.isNotEmpty(YearOfWork)){                this.year_of_work = YearOfWork;//            }else{//                this.year_of_work = null;//            }            return this;        }        public QueryConditionBuilder withPageSize(Integer pageSize){            this.pageSize = pageSize;            return this;        }        public QueryConditionBuilder withOffset(Integer offset){            this.offset = offset;            return this;        }        public QueryConditionBuilder withKeyWord(String key_word){            this.key_word = key_word;            return this;        }        public QueryConditionBuilder withTag(String tag){            this.tag = tag;            return this;        }                public QueryConditionForResume build(){            return new QueryConditionForResume(city,degree,year_of_work,tag, offset, pageSize, key_word);        }    }    }