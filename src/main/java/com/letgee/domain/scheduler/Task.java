package com.letgee.domain.scheduler;import com.letgee.infrastructure.repository.mapper.RhResumeMapper;import com.letgee.infrastructure.repository.po.RhResume;import com.letgee.infrastructure.utils.CosUtils;import org.apache.commons.collections4.CollectionUtils;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.scheduling.annotation.Scheduled;import org.springframework.stereotype.Component;import tk.mybatis.mapper.entity.Example;import javax.annotation.PostConstruct;import javax.annotation.Resource;import java.util.List;import java.util.Optional;import java.util.concurrent.CompletableFuture;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.stream.Collectors;@Componentpublic class Task {        private static final Logger logger = LoggerFactory.getLogger(Task.class);        @Resource    RhResumeMapper rhResumeMapper;        @Resource    CosUtils cosUtils;    private ExecutorService executor = Executors.newFixedThreadPool(3);    @PostConstruct    @Scheduled(cron = "0 0 4 ? * ?")    public void startWork(){        CompletableFuture.runAsync(()->{            this.fileProcessor();        }, executor);    }    public void fileProcessor(){        logger.info("scheduler job : has begin, see the job info below");        List<String> cosURLs = rhResumeMapper.selectNullOfInfo();        if (CollectionUtils.isNotEmpty(cosURLs)){            logger.info("scheduler job : get all cos_url of useless");            Example example = new Example(RhResume.class);            example.createCriteria().andIn("cosOfResume", cosURLs);            rhResumeMapper.deleteByExample(example);            logger.info("scheduler job : delete DB info successfully");            List<String> keys = cosURLs.stream().map(url -> url.split("myqcloud.com/")[1]).collect(Collectors.toList());            cosUtils.delete(keys);            logger.info("scheduler job : delete Tencent_COS file successfully");        }        logger.info("scheduler job : has end, see the job info before");    }}